name: Deploy Shinylive to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Set up Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Install system deps
        run: |
          sudo apt-get update
          # Common build deps for CRAN pkgs (harmless if already present)
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

      - name: Install R packages (with fallback for shinylive)
        shell: Rscript {0}
        run: |
          repos <- c(CRAN = "https://cloud.r-project.org")
          base_pkgs <- c("shiny","jsonlite","ggplot2","DT","here")
          install.packages(base_pkgs, repos = repos)
          # Try CRAN first
          tryCatch(
            install.packages("shinylive", repos = repos),
            error = function(e) message("CRAN shinylive install failed, will try GitHubâ€¦")
          )
          if (!requireNamespace("shinylive", quietly = TRUE)) {
            if (!requireNamespace("remotes", quietly = TRUE)) {
              install.packages("remotes", repos = repos)
            }
            remotes::install_github("posit-dev/r-shinylive")
          }
          stopifnot(requireNamespace("shinylive", quietly = TRUE))

      - name: Build data (precompute CSVs + manifest)
        shell: Rscript {0}
        run: source("sim-dashboard/data_prep.R")

      - name: Export Shinylive site
        shell: Rscript {0}
        run: shinylive::export(appdir = "sim-dashboard", destdir = "dist")

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4