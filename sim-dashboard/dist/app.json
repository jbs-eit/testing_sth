[{"name":"app.R","content":"# app.R\nlibrary(shiny)\nlibrary(jsonlite)\nlibrary(ggplot2)\nlibrary(DT)\n\n# Load the manifest once at app start\nmanifest <- fromJSON(\"index.json\", simplifyVector = TRUE)\n\nui <- fluidPage(\n  tags$head(tags$link(rel=\"stylesheet\", type=\"text/css\", href=\"styles.css\")),\n  titlePanel(\"Simulation Results (Proof of Concept)\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"age\", \"Age:\", choices = manifest$age_values, selected = 65),\n      selectInput(\"scenario\", \"Scenario:\", choices = manifest$scenario_values, selected = \"baseline\"),\n      actionButton(\"load\", \"Load results\"),\n      hr(),\n      downloadButton(\"download_csv\", \"Download CSV\")\n    ),\n    mainPanel(\n      h4(textOutput(\"caption\")),\n      plotOutput(\"plot\", height = \"320px\"),\n      DTOutput(\"table\")\n    )\n  )\n)\n\nserver <- function(input, output, session) {\n  \n  # Resolve the right file for the chosen parameters\n  resolve_path <- reactive({\n    key <- paste(input$age, input$scenario, sep=\"|\")\n    rel <- manifest$lookup[[key]]\n    shiny::validate(shiny::need(!is.null(rel), \"No data for that combination\"))\n    rel\n  })\n  \n  # Load data when user clicks \"Load results\"\n  data_reactive <- eventReactive(input$load, {\n    path <- resolve_path()  # e.g., \"data/results_age-40_scn-policy.csv\"\n    \n    # 1) Classic Shiny: read from filesystem under www/\n    local_path <- file.path(\"www\", path)\n    if (file.exists(local_path)) {\n      return(read.csv(local_path, stringsAsFactors = FALSE))\n    }\n    \n    # 2) If you ever keep data at ./data directly\n    if (file.exists(path)) {\n      return(read.csv(path, stringsAsFactors = FALSE))\n    }\n    \n    # 3) Shinylive/webR: fetch URL relative to app origin\n    tmp <- tempfile(fileext = \".csv\")\n    download.file(path, tmp, mode = \"wb\", quiet = TRUE)\n    read.csv(tmp, stringsAsFactors = FALSE)\n  }, ignoreInit = TRUE)\n  \n  output$caption <- renderText({\n    paste0(\"Age \", input$age, \" â€” Scenario: \", input$scenario)\n  })\n  \n  output$plot <- renderPlot({\n    df <- data_reactive()\n    ggplot(df, aes(year, metric)) +\n      geom_line() +\n      labs(x = NULL, y = \"Metric (units)\", title = unique(df$group)) +\n      theme_minimal(base_size = 12)\n  })\n  \n  output$table <- renderDT({\n    datatable(data_reactive(), options = list(pageLength = 5), rownames = FALSE)\n  })\n  \n  output$download_csv <- downloadHandler(\n    filename = function() {\n      key <- paste(input$age, input$scenario, sep=\"|\")\n      paste0(\"results_\", gsub(\"\\\\|\", \"_\", key), \".csv\")\n    },\n    content = function(file) {\n      df <- data_reactive()\n      write.csv(df, file, row.names = FALSE)\n    }\n  )\n}\n\nshinyApp(ui, server)","type":"text"},{"name":"data_prep.R","content":"# data_prep.R\n\nlibrary(here)\nsetwd(file.path(here(), 'sim-dashboard'))\n\ndir.create(\"www/data\", recursive = TRUE, showWarnings = FALSE)\n\nlibrary(jsonlite)\n\nages     <- c(40, 65)\nscenarios<- c(\"baseline\", \"policy\")\n\nlookup <- list()\nfor (age in ages) {\n  for (scn in scenarios) {\n    set.seed(age + nchar(scn))\n    # FAKE precomputed summary results\n    df <- data.frame(\n      year = 2000:2025,\n      metric = cumsum(rnorm(26, mean = if (scn==\"policy\") 1 else 0.2, sd = 0.5)) + age/2,\n      group = paste0(\"age\", age, \"_\", scn)\n    )\n    path <- sprintf(\"www/data/results_age-%d_scn-%s.csv\", age, scn)\n    write.csv(df, path, row.names = FALSE)\n    key <- paste(age, scn, sep=\"|\")\n    lookup[[key]] <- sub(\"^www/\", \"\", path)  # store path relative to app root (e.g., \"data/...\")\n  }\n}\n\nmanifest <- list(\n  age_values = ages,\n  scenario_values = scenarios,\n  lookup = lookup\n)\nwriteLines(toJSON(manifest, auto_unbox = TRUE, pretty = TRUE), \"index.json\")\ncat(\"Wrote CSVs and index.json\\n\")","type":"text"},{"name":"index.json","content":"{\n  \"age_values\": [40, 65],\n  \"scenario_values\": [\"baseline\", \"policy\"],\n  \"lookup\": {\n    \"40|baseline\": \"data/results_age-40_scn-baseline.csv\",\n    \"40|policy\": \"data/results_age-40_scn-policy.csv\",\n    \"65|baseline\": \"data/results_age-65_scn-baseline.csv\",\n    \"65|policy\": \"data/results_age-65_scn-policy.csv\"\n  }\n}\n","type":"text"},{"name":"www/data/results_age-40_scn-baseline.csv","content":"\"year\",\"metric\",\"group\"\n2000,20.2998804437261,\"age40_baseline\"\n2001,19.1098100985858,\"age40_baseline\"\n2002,18.961933971251,\"age40_baseline\"\n2003,20.1996339237589,\"age40_baseline\"\n2004,20.7947452832419,\"age40_baseline\"\n2005,21.2396706803614,\"age40_baseline\"\n2006,22.0952017178044,\"age40_baseline\"\n2007,22.4150537932102,\"age40_baseline\"\n2008,22.8214786612836,\"age40_baseline\"\n2009,22.8229328268583,\"age40_baseline\"\n2010,22.875442623267,\"age40_baseline\"\n2011,24.2700839438892,\"age40_baseline\"\n2012,24.9213723909032,\"age40_baseline\"\n2013,25.0608812923788,\"age40_baseline\"\n2014,26.1286250296177,\"age40_baseline\"\n2015,24.9079761580828,\"age40_baseline\"\n2016,24.6952805174442,\"age40_baseline\"\n2017,24.8021214103562,\"age40_baseline\"\n2018,25.3396071015685,\"age40_baseline\"\n2019,25.5519713281511,\"age40_baseline\"\n2020,26.0695360387185,\"age40_baseline\"\n2021,26.298759750509,\"age40_baseline\"\n2022,26.7974030289432,\"age40_baseline\"\n2023,26.9962828118495,\"age40_baseline\"\n2024,27.4810437101456,\"age40_baseline\"\n2025,28.0599295156372,\"age40_baseline\"\n","type":"text"},{"name":"www/data/results_age-40_scn-policy.csv","content":"\"year\",\"metric\",\"group\"\n2000,20.5505417656006,\"age40_policy\"\n2001,21.6566073104784,\"age40_policy\"\n2002,22.2923122644806,\"age40_policy\"\n2003,23.9100724867716,\"age40_policy\"\n2004,25.4944925009769,\"age40_policy\"\n2005,26.1832499726333,\"age40_policy\"\n2006,27.3978609054282,\"age40_policy\"\n2007,28.7582820183642,\"age40_policy\"\n2008,30.607968604116,\"age40_policy\"\n2009,31.731363151808,\"age40_policy\"\n2010,33.1017106735799,\"age40_policy\"\n2011,35.2020794962035,\"age40_policy\"\n2012,35.2397965808772,\"age40_policy\"\n2013,36.0533114430075,\"age40_policy\"\n2014,36.9483042254683,\"age40_policy\"\n2015,37.4883415383496,\"age40_policy\"\n2016,38.5195435044861,\"age40_policy\"\n2017,39.7996123842554,\"age40_policy\"\n2018,40.6002442661316,\"age40_policy\"\n2019,41.8098324138069,\"age40_policy\"\n2020,42.6051057366842,\"age40_policy\"\n2021,43.2141377854456,\"age40_policy\"\n2022,44.2084723217276,\"age40_policy\"\n2023,46.0190883869066,\"age40_policy\"\n2024,46.8483610723254,\"age40_policy\"\n2025,47.4172560934498,\"age40_policy\"\n","type":"text"},{"name":"www/data/results_age-65_scn-baseline.csv","content":"\"year\",\"metric\",\"group\"\n2000,32.6274765453326,\"age65_baseline\"\n2001,32.9731555477871,\"age65_baseline\"\n2002,33.2200542500911,\"age65_baseline\"\n2003,33.3563703058102,\"age65_baseline\"\n2004,33.1329547811312,\"age65_baseline\"\n2005,33.4035377101653,\"age65_baseline\"\n2006,34.3722519599032,\"age65_baseline\"\n2007,35.9416758609895,\"age65_baseline\"\n2008,36.9172744805582,\"age65_baseline\"\n2009,37.3480494937847,\"age65_baseline\"\n2010,37.1430827669822,\"age65_baseline\"\n2011,37.7957543578134,\"age65_baseline\"\n2012,38.6556778292103,\"age65_baseline\"\n2013,39.1073448930012,\"age65_baseline\"\n2014,39.0464316332498,\"age65_baseline\"\n2015,38.5928010174965,\"age65_baseline\"\n2016,39.3385032956614,\"age65_baseline\"\n2017,39.458431526224,\"age65_baseline\"\n2018,40.0911286425122,\"age65_baseline\"\n2019,39.855578120083,\"age65_baseline\"\n2020,40.4833311750886,\"age65_baseline\"\n2021,40.7007790590937,\"age65_baseline\"\n2022,40.4263179017134,\"age65_baseline\"\n2023,40.440173266691,\"age65_baseline\"\n2024,41.0215068156196,\"age65_baseline\"\n2025,41.9133046950583,\"age65_baseline\"\n","type":"text"},{"name":"www/data/results_age-65_scn-policy.csv","content":"\"year\",\"metric\",\"group\"\n2000,33.2840789069876,\"age65_policy\"\n2001,34.0604853187356,\"age65_policy\"\n2002,34.8211990249041,\"age65_policy\"\n2003,36.0297717268461,\"age65_policy\"\n2004,36.8208214067643,\"age65_policy\"\n2005,37.2272394473494,\"age65_policy\"\n2006,37.6910966816521,\"age65_policy\"\n2007,39.1927386034468,\"age65_policy\"\n2008,39.6384994758289,\"age65_policy\"\n2009,41.2702148358598,\"age65_policy\"\n2010,42.4166902013567,\"age65_policy\"\n2011,43.6908277098087,\"age65_policy\"\n2012,44.2575002791538,\"age65_policy\"\n2013,45.1523687668369,\"age65_policy\"\n2014,45.8887862329024,\"age65_policy\"\n2015,46.078097227813,\"age65_policy\"\n2016,47.4925647507652,\"age65_policy\"\n2017,48.8832294828511,\"age65_policy\"\n2018,49.8287737590971,\"age65_policy\"\n2019,50.7907790178685,\"age65_policy\"\n2020,51.6333579229029,\"age65_policy\"\n2021,51.7403059030426,\"age65_policy\"\n2022,52.6202637176528,\"age65_policy\"\n2023,53.6793267695723,\"age65_policy\"\n2024,53.8008751669666,\"age65_policy\"\n2025,53.8098585388306,\"age65_policy\"\n","type":"text"},{"name":"www/style.css","content":"/* www/styles.css */\nbody { font-family: system-ui, -apple-system, \"Segoe UI\", Roboto, sans-serif; }","type":"text"}]
